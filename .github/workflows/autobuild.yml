name: Wheels

on:
  push:
    branches: [ $default-branch, main ]

jobs:
  create_release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create_release.outputs.id }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - uses: actions/checkout@v3
      if: github.event_name == 'push'

    - uses: dev-drprasad/delete-tag-and-release@v0.2.1
      continue-on-error: true
      with:
        delete_release: true
        tag_name: "nightly"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: github.event_name == 'push'

    - uses: rickstaa/action-create-tag@v1
      id: create_tag
      with:
        tag: "nightly"
        message: "Latest release"
        force_push_tag: true
      if: github.event_name == 'push'

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "nightly"
        release_name: "nightly"
        draft: false
        prerelease: false
      if: github.event_name == 'push'

  build_wheels:
    name: Build Python wheels
    needs: [create_release]
    if: github.event_name == 'push'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, windows-latest, macOS-latest]
    env:
      # Skip 32-bit wheels builds
      CIBW_SKIP: "*-win32 *_i686"
      CIBW_BEFORE_ALL_LINUX: >
        echo "Considering vtk-Linux-`uname -m`.tar.gz..." &&
        mkdir -p vtk &&
        tar -xvzf vtk-Linux-`uname -m`.tar.gz -C vtk/

    steps:
      - uses: actions/checkout@v3

      # Used to host cibuildwheel
      - uses: actions/setup-python@v3

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.8.1

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v3
        with:
          name: "Python wheels"
          path: ./wheelhouse/*.whl
